services:
  # Backend API service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: bass-backend
    environment:
      - NODE_ENV=production
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - BETTER_AUTH_URL=${BETTER_AUTH_URL}
      - BETTER_AUTH_TRUSTED_ORIGINS=${BETTER_AUTH_TRUSTED_ORIGINS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - DB_FILE_NAME=file:/app/data/production.db
      - PORT=3000
    ports:
      - "${BACKEND_HOST_PORT:-3001}:3000"
    volumes:
      - backend-data:/app/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    labels:
      - "app.name=better-auth-backend"
      - "app.version=1.0.0"

  # Frontend web service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
        - VITE_APP_ENV=production
    restart: unless-stopped
    container_name: bass-frontend
    ports:
      - "${FRONTEND_HOST_PORT:-4173}:4173"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4173/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    labels:
      - "app.name=better-auth-frontend"
      - "app.version=1.0.0"

# Persistent volumes
volumes:
  backend-data:
    driver: local
    labels:
      - "app.name=better-auth"
      - "app.component=database"

# Networks
networks:
  app-network:
    driver: bridge
    name: better-auth-network
    labels:
      - "app.name=better-auth"
